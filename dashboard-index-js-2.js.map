{"version":3,"sources":["webpack:///./src/components/sortable-table/index.js","webpack:///./src/components/range-picker/index.js","webpack:///./src/components/column-chart/index.js","webpack:///./src/pages/dashboard/bestsellers-header.js","webpack:///./src/pages/dashboard/index.js","webpack:///./src/utils/fetch-json.js"],"names":["SortableTable","constructor","headersConfig","url","sorted","id","find","item","sortable","order","isSortLocally","step","start","end","clickableRow","this","async","bottom","element","getBoundingClientRect","document","documentElement","clientHeight","loading","sortLocally","data","loadData","update","event","column","target","closest","dataset","newOrder","asc","desc","toggleOrder","append","subElements","arrow","sortOnServer","URL","render","wrapper","createElement","innerHTML","getTable","firstElementChild","getSubElements","renderRows","initEventListeners","classList","remove","searchParams","set","add","fetchJson","addRows","body","getTableRows","rows","childNodes","getTableHeader","map","getHeaderRow","join","title","getHeaderSortingArrow","getTableBody","getTableRow","template","header","addEventListener","onSortClick","onWindowScroll","sortedData","sortData","length","arr","sortType","customSorting","direction","sort","a","b","localeCompare","querySelectorAll","reduce","accum","subElement","removeEventListener","destroy","RangePicker","date","toLocaleString","dateStyle","from","Date","to","isOpen","contains","isRangePicker","close","showDateFrom","selected","formatDate","Promise","resolve","elem","input","selector","onDocumentClick","toggle","onSelectorClick","renderDateRangePicker","onRangePickerCellClick","showDate1","showDate2","setMonth","getMonth","renderCalendar","controlLeft","querySelector","controlRight","prev","next","renderHighlight","cell","value","cellDate","toISOString","selectedFromElem","selectedToElem","showDate","setDate","monthStr","month","table","dayIndex","getDay","getDate","dateValue","selectingFrom","dispatchEvent","CustomEvent","bubbles","detail","ColumnChart","label","link","getColumnBody","maxValue","Math","max","scale","chartHeight","eachDayValue","formatBigInt","floor","getLink","price","newArr","priceString","String","count","i","push","splice","reverse","headerData","bodyData","textContent","category","Page","ORDERS","creatURl","name","SALES","CUSTOMERS","ordersData","salesData","customersData","all","Object","values","pathname","process","forEach","param","href","components","sortableTable","getDataForColumnCharts","ordersDataTotal","salesDataTotal","customersDataTotal","ordersChart","salesChart","customersChart","getTime","rangePicker","saveComponents","items","keys","initComponents","renderComponents","component","root","$element","updateChartsComponents","updateTableComponent","params","response","fetch","toString","err","FetchError","ok","errorText","statusText","json","error","message","status","Error","super","window","reason","alert"],"mappings":"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","file":"dashboard-index-js-2.js","sourcesContent":["import fetchJson from \"../../utils/fetch-json.js\";\r\n\r\nconst BACKEND_URL = 'https://course-js.javascript.ru';\r\n\r\nexport default class SortableTable {\r\n  element;\r\n  subElements = {};\r\n  data = [];\r\n  loading = false;\r\n  step = 20;\r\n  start = 0;\r\n  end = this.start + this.step;\r\n\r\n  onWindowScroll = async () => {\r\n    const { bottom } = this.element.getBoundingClientRect();\r\n    const { id, order } = this.sorted;\r\n    if (bottom < document.documentElement.clientHeight && !this.loading && this.sortLocally) {\r\n      this.start = this.end;\r\n      this.end = this.start + this.step;\r\n      this.loading = true;\r\n\r\n      const data = await this.loadData(id, order, this.start, this.end);\r\n      this.update(data);\r\n\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  onSortClick = event => {\r\n    const column = event.target.closest('[data-sortable=\"true\"]');\r\n    const toggleOrder = order => {\r\n      const orders = {\r\n        asc: 'desc',\r\n        desc: 'asc'\r\n      };\r\n\r\n      return orders[order];\r\n    };\r\n\r\n    if (column) {\r\n      const { id, order } = column.dataset;\r\n      const newOrder = toggleOrder(order);\r\n\r\n      this.sorted = {\r\n        id,\r\n        order: newOrder\r\n      };\r\n\r\n      column.dataset.order = newOrder;\r\n      column.append(this.subElements.arrow);\r\n\r\n      if (this.isSortLocally) {\r\n        this.sortLocally(id, newOrder);\r\n      } else {\r\n        this.sortOnServer(id, newOrder, 1, 1 + this.step);\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(headersConfig = [], {\r\n    url = '',\r\n    sorted = {\r\n      id: headersConfig.find(item => item.sortable).id,\r\n      order: 'asc'\r\n    },\r\n    isSortLocally = false,\r\n    step = 20,\r\n    start = 0,\r\n    end = start + step,\r\n    clickableRow = true,\r\n  } = {}) {\r\n    this.headersConfig = headersConfig;\r\n    this.url = new URL(url, BACKEND_URL);\r\n    this.sorted = sorted;\r\n    this.isSortLocally = isSortLocally;\r\n    this.clickableRow = clickableRow;\r\n    this.step = step;\r\n    this.start = start;\r\n    this.end = end;\r\n    this.render();\r\n  }\r\n\r\n  async render() {\r\n    const {id, order} = this.sorted;\r\n    const wrapper = document.createElement('div');\r\n\r\n    wrapper.innerHTML = this.getTable();\r\n\r\n    const element = wrapper.firstElementChild;\r\n\r\n    this.element = element;\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    const data = await this.loadData(id, order, this.start, this.end);\r\n\r\n    this.renderRows(data);\r\n    this.initEventListeners();\r\n    return this.element;\r\n  }\r\n\r\n  async loadData (id, order, start = this.start, end = this.end) {\r\n    const {loading} = this.subElements;\r\n\r\n    loading.classList.remove(\"hide\");\r\n\r\n    this.url.searchParams.set('_sort', id);\r\n    this.url.searchParams.set('_order', order);\r\n    this.url.searchParams.set('_start', start);\r\n    this.url.searchParams.set('_end', end);\r\n    \r\n    this.element.classList.add('sortable-table_loading');\r\n\r\n    const data = await fetchJson(this.url);\r\n\r\n    this.element.classList.remove('sortable-table_loading');\r\n    \r\n    loading.classList.add(\"hide\");\r\n\r\n    return data;\r\n  }\r\n\r\n  addRows (data) {\r\n    this.data = data;\r\n\r\n    this.subElements.body.innerHTML = this.getTableRows(data);\r\n  }\r\n\r\n  update (data) {\r\n    const rows = document.createElement('div');\r\n\r\n    this.data = [...this.data, ...data];\r\n    rows.innerHTML = this.getTableRows(data);\r\n\r\n    // TODO: This is comparison of performance append vs insertAdjacentHTML\r\n    // console.time('timer');\r\n    // this.subElements.body.insertAdjacentHTML('beforeend', rows.innerHTML);\r\n    this.subElements.body.append(...rows.childNodes);\r\n    // console.timeEnd('timer');\r\n  }\r\n\r\n  getTableHeader() {\r\n    return `<div data-element=\"header\" class=\"sortable-table__header sortable-table__row\">\r\n      ${this.headersConfig.map(item => this.getHeaderRow(item)).join('')}\r\n    </div>`;\r\n  }\r\n\r\n  getHeaderRow ({id, title, sortable}) {\r\n    const order = this.sorted.id === id ? this.sorted.order : 'asc';\r\n    return `\r\n      <div class=\"sortable-table__cell\" data-id=\"${id}\" data-sortable=\"${sortable}\" data-order=\"${order}\">\r\n        <span>${title}</span>\r\n        ${this.getHeaderSortingArrow(id)}\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  getHeaderSortingArrow (id) {\r\n    const isOrderExist = this.sorted.id === id ? this.sorted.order : '';\r\n\r\n    return isOrderExist\r\n      ? `<span data-element=\"arrow\" class=\"sortable-table__sort-arrow\">\r\n          <span class=\"sort-arrow\"></span>\r\n        </span>`\r\n      : '';\r\n  }\r\n\r\n  getTableBody(data) {\r\n    return `\r\n      <div data-element=\"body\" class=\"sortable-table__body\">\r\n        ${this.getTableRows(data)}\r\n      </div>`;\r\n  }\r\n\r\n  getTableRows (data) {\r\n    return data.map(item => {\r\n      if(this.clickableRow) {\r\n        return `<a href=\"/products/${item.id}\" class=\"sortable-table__row\">\r\n          ${this.getTableRow(item, data)}\r\n        </a>`\r\n      } else {\r\n        return `<div href=\"/products/${item.id}\" class=\"sortable-table__row\">\r\n          ${this.getTableRow(item, data)}\r\n        </div>`\r\n      }\r\n    }\r\n    ).join('');\r\n  }\r\n\r\n  getTableRow (item) {\r\n    const cells = this.headersConfig.map(({id, template}) => {\r\n      return {\r\n        id,\r\n        template\r\n      }\r\n    });\r\n\r\n    return cells.map(({id, template}) => {\r\n      return template\r\n        ? template(item[id])\r\n        : `<div class=\"sortable-table__cell\">${item[id]}</div>`\r\n    }).join('');\r\n  }\r\n\r\n  getTable() {\r\n    return `\r\n      <div class=\"sortable-table\">\r\n        ${this.getTableHeader()}\r\n        ${this.getTableBody(this.data)}\r\n\r\n        <div data-element=\"loading\" class=\"loading-line sortable-table__loading-line hide\"></div>\r\n\r\n        <div data-element=\"emptyPlaceholder\" class=\"sortable-table__empty-placeholder\">\r\n          <div class=\"sortable-table__placeholder-wrapper\">\r\n            <p>Не найдено товаров удовлетворяющих выбранному критерию</p>\r\n            <button data-element=\"clearFilterBtn\" type=\"button\" class=\"button-primary-outline\">Очистить фильтры</button>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n  }\r\n\r\n  initEventListeners () {\r\n    this.subElements.header.addEventListener('pointerdown', this.onSortClick);\r\n    document.addEventListener('scroll', this.onWindowScroll);\r\n  }\r\n\r\n  sortLocally (id, order) {\r\n    const sortedData = this.sortData(id, order);\r\n\r\n    this.subElements.body.innerHTML = this.getTableBody(sortedData);\r\n  }\r\n\r\n  async sortOnServer (id, order, start, end) {\r\n    const data = await this.loadData(id, order, start, end);\r\n\r\n    this.renderRows(data);\r\n  }\r\n\r\n  renderRows (data) {\r\n    if (data.length) {\r\n      this.element.classList.remove('sortable-table_empty');\r\n      this.addRows(data);\r\n    } else {\r\n      this.element.classList.add('sortable-table_empty');\r\n    }\r\n  }\r\n\r\n  sortData (id, order) {\r\n    const arr = [...this.data];\r\n    const column = this.headersConfig.find(item => item.id === id);\r\n    const {sortType, customSorting} = column;\r\n    const direction = order === 'asc' ? 1 : -1;\r\n\r\n    return arr.sort((a, b) => {\r\n      switch (sortType) {\r\n        case 'number':\r\n          return direction * (a[id] - b[id]);\r\n        case 'string':\r\n          return direction * a[id].localeCompare(b[id], 'ru');\r\n        case 'custom':\r\n          return direction * customSorting(a, b);\r\n        default:\r\n          return direction * (a[id] - b[id]);\r\n      }\r\n    });\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  remove() {\r\n    this.element.remove();\r\n    document.removeEventListener('scroll', this.onWindowScroll);\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.subElements = {};\r\n  }\r\n}\r\n","export default class RangePicker {\r\n  element = null;\r\n  subElements = {};\r\n  selectingFrom = true;\r\n  selected = {\r\n    from: new Date(),\r\n    to: new Date()\r\n  };\r\n\r\n  static formatDate (date) {\r\n    return date.toLocaleString('ru', {dateStyle: 'short'})\r\n  }\r\n\r\n  onDocumentClick = event => {\r\n    const isOpen = this.element.classList.contains('rangepicker_open');\r\n    const isRangePicker = this.element.contains(event.target);\r\n\r\n    if (isOpen && !isRangePicker) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  constructor({from = new Date(), to = new Date()} = {}) {\r\n    this.showDateFrom = new Date(from);\r\n    this.selected = {from, to};\r\n\r\n    this.render();\r\n  }\r\n\r\n  get template () {\r\n    const from = RangePicker.formatDate(this.selected.from);\r\n    const to = RangePicker.formatDate(this.selected.to);\r\n\r\n    return `<div class=\"rangepicker\">\r\n      <div class=\"rangepicker__input\" data-elem=\"input\">\r\n        <span data-elem=\"from\">${from}</span> -\r\n        <span data-elem=\"to\">${to}</span>\r\n      </div>\r\n      <div class=\"rangepicker__selector\" data-elem=\"selector\"></div>\r\n    </div>`;\r\n  }\r\n\r\n  render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(element);\r\n\r\n    this.initEventListeners();\r\n\r\n    return Promise.resolve(this.element);\r\n  }\r\n\r\n  getSubElements (element) {\r\n    const subElements = {};\r\n\r\n    for (const subElement of element.querySelectorAll('[data-elem]')) {\r\n      subElements[subElement.dataset.elem] = subElement;\r\n    }\r\n\r\n    return subElements;\r\n  }\r\n\r\n  initEventListeners () {\r\n    const {input, selector} = this.subElements;\r\n\r\n    document.addEventListener('click', this.onDocumentClick, true);\r\n    input.addEventListener('click', () => this.toggle());\r\n    selector.addEventListener('click', event => this.onSelectorClick(event));\r\n  }\r\n\r\n  toggle() {\r\n    this.element.classList.toggle('rangepicker_open');\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  onSelectorClick({target}) {\r\n    if (target.classList.contains('rangepicker__cell')) {\r\n      this.onRangePickerCellClick(target);\r\n    }\r\n  }\r\n\r\n  close() {\r\n    this.element.classList.remove('rangepicker_open');\r\n  }\r\n\r\n  renderDateRangePicker() {\r\n    const showDate1 = new Date(this.showDateFrom);\r\n    const showDate2 = new Date(this.showDateFrom);\r\n    const { selector } = this.subElements;\r\n\r\n    showDate2.setMonth(showDate2.getMonth() + 1);\r\n\r\n    selector.innerHTML = `\r\n      <div class=\"rangepicker__selector-arrow\"></div>\r\n      <div class=\"rangepicker__selector-control-left\"></div>\r\n      <div class=\"rangepicker__selector-control-right\"></div>\r\n      ${this.renderCalendar(showDate1)}\r\n      ${this.renderCalendar(showDate2)}\r\n    `;\r\n\r\n    const controlLeft = selector.querySelector('.rangepicker__selector-control-left');\r\n    const controlRight = selector.querySelector('.rangepicker__selector-control-right');\r\n\r\n    controlLeft.addEventListener('click', () => this.prev());\r\n    controlRight.addEventListener('click', () => this.next());\r\n\r\n    this.renderHighlight();\r\n  }\r\n\r\n  prev () {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() - 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  next () {\r\n    this.showDateFrom.setMonth(this.showDateFrom.getMonth() + 1);\r\n    this.renderDateRangePicker();\r\n  }\r\n\r\n  renderHighlight() {\r\n    const { from, to } = this.selected;\r\n\r\n    for (const cell of this.element.querySelectorAll('.rangepicker__cell')) {\r\n      const { value } = cell.dataset;\r\n      const cellDate = new Date(value);\r\n\r\n      cell.classList.remove('rangepicker__selected-from');\r\n      cell.classList.remove('rangepicker__selected-between');\r\n      cell.classList.remove('rangepicker__selected-to');\r\n\r\n      if (from && value === from.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-from');\r\n      } else if (to && value === to.toISOString()) {\r\n        cell.classList.add('rangepicker__selected-to');\r\n      } else if (from && to && cellDate >= from && cellDate <= to) {\r\n        cell.classList.add('rangepicker__selected-between');\r\n      }\r\n    }\r\n\r\n    if (from) {\r\n      const selectedFromElem = this.element.querySelector(`[data-value=\"${from.toISOString()}\"]`);\r\n      if (selectedFromElem) {\r\n        selectedFromElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-from');\r\n      }\r\n    }\r\n\r\n    if (to) {\r\n      const selectedToElem = this.element.querySelector(`[data-value=\"${to.toISOString()}\"]`);\r\n      if (selectedToElem) {\r\n        selectedToElem.closest('.rangepicker__cell').classList.add('rangepicker__selected-to');\r\n      }\r\n    }\r\n  }\r\n\r\n  renderCalendar(showDate) {\r\n    const date = new Date(showDate);\r\n    const getGridStartIndex = dayIndex => {\r\n      const index = dayIndex === 0 ? 6 : (dayIndex - 1); // make Sunday (0) the last day\r\n      return index + 1;\r\n    };\r\n\r\n    date.setDate(1);\r\n\r\n    // text-transform: capitalize\r\n    const monthStr = date.toLocaleString('ru', {month: 'long'});\r\n\r\n    let table = `<div class=\"rangepicker__calendar\">\r\n      <div class=\"rangepicker__month-indicator\">\r\n        <time datetime=${monthStr}>${monthStr}</time>\r\n      </div>\r\n      <div class=\"rangepicker__day-of-week\">\r\n        <div>Пн</div><div>Вт</div><div>Ср</div><div>Чт</div><div>Пт</div><div>Сб</div><div>Вс</div>\r\n      </div>\r\n      <div class=\"rangepicker__date-grid\">\r\n    `;\r\n\r\n    // first day of month starts after a space\r\n    // * * * 1 2 3 4\r\n    table += `\r\n      <button type=\"button\"\r\n        class=\"rangepicker__cell\"\r\n        data-value=\"${date.toISOString()}\"\r\n        style=\"--start-from: ${getGridStartIndex(date.getDay())}\">\r\n          ${date.getDate()}\r\n      </button>`;\r\n\r\n    date.setDate(2);\r\n\r\n    while (date.getMonth() === showDate.getMonth()) {\r\n      table += `\r\n        <button type=\"button\"\r\n          class=\"rangepicker__cell\"\r\n          data-value=\"${date.toISOString()}\">\r\n            ${date.getDate()}\r\n        </button>`;\r\n\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    // close the table\r\n    table += '</div></div>';\r\n\r\n    return table;\r\n  }\r\n\r\n  onRangePickerCellClick(target) {\r\n    const { value } = target.dataset;\r\n\r\n    if (value) {\r\n      const dateValue = new Date(value);\r\n\r\n      if (this.selectingFrom) {\r\n        this.selected = {\r\n          from: dateValue,\r\n          to:   null\r\n        };\r\n        this.selectingFrom = false;\r\n        this.renderHighlight();\r\n      } else {\r\n        if (dateValue > this.selected.from) {\r\n          this.selected.to = dateValue;\r\n        } else {\r\n          this.selected.to = this.selected.from;\r\n          this.selected.from = dateValue;\r\n        }\r\n\r\n        this.selectingFrom = true;\r\n        this.renderHighlight();\r\n      }\r\n\r\n      if (this.selected.from && this.selected.to) {\r\n        this.dispatchEvent();\r\n        this.close();\r\n        this.subElements.from.innerHTML = RangePicker.formatDate(this.selected.from);\r\n        this.subElements.to.innerHTML = RangePicker.formatDate(this.selected.to)\r\n      }\r\n    }\r\n  }\r\n\r\n  dispatchEvent () {\r\n    this.element.dispatchEvent(new CustomEvent('date-select', {\r\n      bubbles: true,\r\n      detail:  this.selected\r\n    }));\r\n  }\r\n\r\n  remove () {\r\n    this.element.remove();\r\n    // TODO: Warning! To remove listener  MUST be passes the same event phase\r\n    document.removeEventListener('click', this.onDocumentClick, true);\r\n  }\r\n\r\n  destroy() {\r\n    this.remove();\r\n    this.element = null;\r\n    this.subElements = {};\r\n    this.selectingFrom = true;\r\n    this.selected = {\r\n      from: new Date(),\r\n      to: new Date()\r\n    };\r\n\r\n    return this;\r\n  }\r\n}\r\n","export default class ColumnChart {\r\n  element;\r\n  subElements = {};\r\n  chartHeight = 50;\r\n\r\n  constructor({ data = [], label = '', link = '', value = 0 } = {}) {\r\n    this.data = data;\r\n    this.label = label;\r\n    this.link = link;\r\n    this.value = value;\r\n    this.render();\r\n  }\r\n\r\n  getColumnBody(data) {\r\n    const maxValue = Math.max(...data);\r\n    return data.map(item => {\r\n        const scale = this.chartHeight / maxValue;\r\n        const eachDayValue = this.label === \"sales\" ? '$' + this.formatBigInt(item) : this.formatBigInt(item);\r\n\r\n        return `<div style=\"--value: ${Math.floor(item * scale)}\" data-tooltip=\"${eachDayValue}\"></div>`;\r\n      }).join('');\r\n  }\r\n\r\n  getLink() {\r\n    return this.link ? `<a class=\"column-chart__link\" href=\"${this.link}\">View all</a>` : '';\r\n  }\r\n\r\n  get template() {\r\n    return `\r\n      <div class=\"column-chart column-chart_loading\" style=\"--chart-height: ${this.chartHeight}\">\r\n        <div class=\"column-chart__title\">\r\n          Total ${this.label}\r\n          ${this.getLink()}\r\n        </div>\r\n        <div class=\"column-chart__container\">\r\n          <div data-element=\"header\" class=\"column-chart__header\">\r\n            ${this.value}\r\n          </div>\r\n          <div data-element=\"body\" class=\"column-chart__chart\">\r\n            ${this.getColumnBody(this.data)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  async render() {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n    this.element = element.firstElementChild;\r\n\r\n    if (this.data.length) {\r\n      this.element.classList.remove(`column-chart_loading`);\r\n    }\r\n\r\n    this.subElements = this.getSubElements(this.element);\r\n\r\n    return this.element;\r\n  }\r\n\r\n  getSubElements(element) {\r\n    const elements = element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  formatBigInt(price) {\r\n    const newArr = [];\r\n    const priceString = String(price);\r\n    const lastElementIndex = priceString.length - 1;\r\n    let count = 0;\r\n    for (let i = lastElementIndex; i >= 0; i--) {\r\n      count++;\r\n      newArr.push(priceString[i]);\r\n      if (count % 3 === 0) {\r\n        newArr.push(',');\r\n      }\r\n    }\r\n\r\n    if (newArr[newArr.length - 1] === ',') {\r\n      newArr.splice(newArr.length - 1, 1);\r\n    }\r\n    return newArr.reverse().join('');\r\n  }\r\n\r\n  update({ headerData, bodyData }) {\r\n    this.subElements.header.textContent = headerData;\r\n    this.subElements.body.innerHTML = this.getColumnBody(bodyData);\r\n  }\r\n\r\n  destroy() {\r\n    this.element.remove();\r\n  }\r\n}\r\n","const header = [\r\n  {\r\n    id: 'images',\r\n    title: 'Image',\r\n    sortable: false,\r\n    template: data => {\r\n      return `\r\n          <div class=\"sortable-table__cell\">\r\n            <img class=\"sortable-table-image\" alt=\"Image\" src=\"${data[0].url}\">\r\n          </div>\r\n        `;\r\n    }\r\n  },\r\n  {\r\n    id: 'title',\r\n    title: 'Name',\r\n    sortable: true,\r\n    sortType: 'string'\r\n  },\r\n  {\r\n    id: 'subcategory',\r\n    title: 'Category',\r\n    sortable: false,\r\n    sortType: 'string',\r\n    template: data => {\r\n     return `<div class=\"sortable-table__cell\">\r\n     <span data-tooltip='\r\n     <div class=\"sortable-table-tooltip\">\r\n       <span class=\"sortable-table-tooltip__category\">${data.category.title}</span> /\r\n       <b class=\"sortable-table-tooltip__subcategory\">${data.title}</b>\r\n     </div>'>${data.title}</span>\r\n     </div>`;\r\n    }\r\n  },\r\n  {\r\n    id: 'quantity',\r\n    title: 'Quantity',\r\n    sortable: true,\r\n    sortType: 'number'\r\n  },\r\n  {\r\n    id: 'price',\r\n    title: 'Price',\r\n    sortable: true,\r\n    sortType: 'number',\r\n    template:  data => `<div class=\"sortable-table__cell\">$${data}</div>`\r\n  },\r\n  {\r\n    id: 'sales',\r\n    title: 'Sales',\r\n    sortable: true,\r\n    sortType: 'number'\r\n    },\r\n];\r\n\r\nexport default header;\r\n","import RangePicker from '../../components/range-picker/index.js';\r\nimport SortableTable from '../../components/sortable-table/index.js';\r\nimport ColumnChart from '../../components/column-chart/index.js';\r\nimport header from './bestsellers-header.js';\r\n\r\nimport fetchJson from '../../utils/fetch-json.js';\r\n\r\nexport default class Page {\r\n  element;\r\n  subElements = {};\r\n  components = {};\r\n\r\n  async getDataForColumnCharts (from, to) {\r\n    const ORDERS = this.creatURl(\r\n      'api/dashboard/orders', \r\n      [\r\n        {name:'from', value: from.toISOString()},\r\n        {name:'to', value: to.toISOString()}\r\n      ]);\r\n\r\n    const SALES = this.creatURl(\r\n      'api/dashboard/sales', \r\n      [\r\n        {name:'from', value: from.toISOString()},\r\n        {name:'to', value: to.toISOString()}\r\n      ]);\r\n\r\n    const CUSTOMERS = this.creatURl(\r\n      'api/dashboard/customers', \r\n      [\r\n        {name:'from', value: from.toISOString()},\r\n        {name:'to', value: to.toISOString()}\r\n      ]);\r\n\r\n    const ordersData = fetchJson(ORDERS);\r\n    const salesData = fetchJson(SALES);\r\n    const customersData = fetchJson(CUSTOMERS);\r\n\r\n    const data = await Promise.all([ordersData, salesData, customersData]);\r\n    return data.map(item => Object.values(item));\r\n  }\r\n\r\n\r\n  creatURl(pathname, searchParams = []) {\r\n    const url = new URL(pathname, process.env.BACKEND_URL);\r\n  \r\n    if(searchParams.length) {\r\n      searchParams.forEach(param => {\r\n        url.searchParams.set(param.name, param.value);\r\n      });\r\n    }\r\n  \r\n    return url.href;\r\n  }\r\n\r\n  async updateTableComponent (from, to) {\r\n    const data = await fetchJson(`${process.env.BACKEND_URL}api/dashboard/bestsellers?_start=0&_end=20&from=${from.toISOString()}&to=${to.toISOString()}`);\r\n    this.components.sortableTable.addRows(data);\r\n  }\r\n\r\n  async updateChartsComponents (from, to) {\r\n    const [ordersData, salesData, customersData] = await this.getDataForColumnCharts(from, to);\r\n    const ordersDataTotal = this.formatBigInt(ordersData.reduce((accum, item) => accum + item));\r\n    const salesDataTotal = this.formatBigInt(salesData.reduce((accum, item) => accum + item));\r\n    const customersDataTotal = this.formatBigInt(customersData.reduce((accum, item) => accum + item));\r\n\r\n    this.components.ordersChart.update({headerData: ordersDataTotal, bodyData: ordersData});\r\n    this.components.salesChart.update({headerData: '$' + salesDataTotal, bodyData: salesData});\r\n    this.components.customersChart.update({headerData: customersDataTotal, bodyData: customersData});\r\n  }\r\n\r\n  async initComponents () {\r\n    const to = new Date();\r\n    const from = new Date(to.getTime() - (30 * 24 * 60 * 60 * 1000));\r\n    const [ordersData, salesData, customersData] = await this.getDataForColumnCharts(from, to);\r\n\r\n    const rangePicker = new RangePicker({\r\n      from,\r\n      to\r\n    });\r\n\r\n    const sortableTable = new SortableTable(header, {\r\n      url: `api/dashboard/bestsellers?_start=0&_end=20&from=${from.toISOString()}&to=${to.toISOString()}`,\r\n      isSortLocally: true,\r\n    });\r\n    sortableTable.loading = true;//TODO: Таким способом отключил подгрузку данных....\r\n\r\n    const ordersChart = new ColumnChart({\r\n      data: ordersData,\r\n      label: 'orders',\r\n      value: this.formatBigInt(ordersData.reduce((accum, item) => accum + item)),\r\n      link: '/sales'\r\n    });\r\n\r\n    const salesChart = new ColumnChart({\r\n      data: salesData,\r\n      label: 'sales',\r\n      value: '$' + this.formatBigInt(salesData.reduce((accum, item) => accum + item)),\r\n    });\r\n\r\n    const customersChart = new ColumnChart({\r\n      data: customersData,\r\n      label: 'customers',\r\n      value: this.formatBigInt(customersData.reduce((accum, item) => accum + item)),\r\n    });\r\n\r\n    this.saveComponents({sortableTable, ordersChart, salesChart, customersChart, rangePicker});\r\n  }\r\n\r\n  saveComponents(items = {}) {\r\n    Object.keys(items).forEach(item => {\r\n        this.components[item] = items[item];\r\n    })\r\n}\r\n\r\n  get template () {\r\n    return `<div class=\"dashboard\">\r\n      <div class=\"content__top-panel\">\r\n        <h2 class=\"page-title\">Dashboard</h2>\r\n        <!-- RangePicker component -->\r\n        <div data-element=\"rangePicker\"></div>\r\n      </div>\r\n      <div data-element=\"chartsRoot\" class=\"dashboard__charts\">\r\n        <!-- column-chart components -->\r\n        <div data-element=\"ordersChart\" class=\"dashboard__chart_orders\"></div>\r\n        <div data-element=\"salesChart\" class=\"dashboard__chart_sales\"></div>\r\n        <div data-element=\"customersChart\" class=\"dashboard__chart_customers\"></div>\r\n      </div>\r\n\r\n      <h3 class=\"block-title\">Best sellers</h3>\r\n\r\n      <div data-element=\"sortableTable\">\r\n        <!-- sortable-table component -->\r\n      </div>\r\n    </div>`;\r\n  }\r\n\r\n  async render () {\r\n    const element = document.createElement('div');\r\n\r\n    element.innerHTML = this.template;\r\n\r\n    this.element = element.firstElementChild;\r\n    this.subElements = this.getSubElements(this.element);\r\n\r\n    await this.initComponents();\r\n    this.renderComponents();\r\n    this.initEventListeners();\r\n    return this.element;\r\n  }\r\n\r\n  renderComponents () {\r\n    Object.keys(this.components).forEach(component => {\r\n      const root = this.subElements[component];\r\n      const { element } = this.components[component];\r\n\r\n      root.append(element);\r\n    });\r\n  }\r\n\r\n  getSubElements ($element) {\r\n    const elements = $element.querySelectorAll('[data-element]');\r\n\r\n    return [...elements].reduce((accum, subElement) => {\r\n      accum[subElement.dataset.element] = subElement;\r\n\r\n      return accum;\r\n    }, {});\r\n  }\r\n\r\n  initEventListeners () {\r\n    this.components.rangePicker.element.addEventListener('date-select', event => {\r\n      const { from, to } = event.detail;\r\n      this.updateChartsComponents(from, to);\r\n      this.updateTableComponent(from, to);\r\n    });\r\n  }\r\n\r\n  formatBigInt(price) {\r\n    return price.toLocaleString('en-US');\r\n  }\r\n\r\n  destroy () {\r\n    for (const component of Object.values(this.components)) {\r\n      component.destroy();\r\n    }\r\n  }\r\n}\r\n","// same as fetch, but throws FetchError in case of errors\r\n// status >= 400 is an error\r\n// network error / json error are errors\r\n\r\nexport default async function(url, params) {\r\n  let response;\r\n\r\n  try {\r\n    // NOTE: \"toString\" call needed for correct work of \"jest-fetch-mock\"\r\n    response = await fetch(url.toString(), params);\r\n  } catch(err) {\r\n    throw new FetchError(response, \"Network error has occurred.\");\r\n  }\r\n\r\n  let body;\r\n\r\n  if (!response.ok) {\r\n    let errorText = response.statusText; // Not Found (for 404)\r\n\r\n    try {\r\n      body = await response.json();\r\n\r\n      errorText = (body.error && body.error.message) || (body.data && body.data.error && body.data.error.message) || errorText;\r\n    } catch (error) { /* ignore failed body */ }\r\n\r\n    let message = `Error ${response.status}: ${errorText}`;\r\n\r\n    throw new FetchError(response, body, message);\r\n  }\r\n\r\n  try {\r\n    return await response.json();\r\n  } catch(err) {\r\n    throw new FetchError(response, null, err.message);\r\n  }\r\n}\r\n\r\nexport class FetchError extends Error {\r\n  name = \"FetchError\";\r\n\r\n  constructor(response, body, message) {\r\n    super(message);\r\n    this.response = response;\r\n    this.body = body;\r\n  }\r\n}\r\n\r\n// handle uncaught failed fetch through\r\nwindow.addEventListener('unhandledrejection', event => {\r\n  if (event.reason instanceof FetchError) {\r\n    alert(event.reason.message);\r\n  }\r\n});\r\n\r\n"],"sourceRoot":""}