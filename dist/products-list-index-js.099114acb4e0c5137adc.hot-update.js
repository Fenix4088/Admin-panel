webpackHotUpdate("products-list-index-js",{

/***/ "./src/components/double-slider/index.js":
/*!***********************************************!*\
  !*** ./src/components/double-slider/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return DoubleSlider; });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass DoubleSlider {\n  constructor({\n    min = 100,\n    max = 200,\n    formatValue = value => '$' + value,\n    selected = {\n      from: min,\n      to: max\n    }\n  } = {}) {\n    _defineProperty(this, \"element\", void 0);\n\n    _defineProperty(this, \"subElements\", {});\n\n    _defineProperty(this, \"shiftX\", void 0);\n\n    _defineProperty(this, \"dragging\", void 0);\n\n    _defineProperty(this, \"clickDown\", e => {\n      e.preventDefault();\n      const thumbElement = e.target;\n      const {\n        left,\n        right\n      } = thumbElement.getBoundingClientRect();\n\n      if (thumbElement === this.subElements.thumbLeft) {\n        this.shiftX = right - e.clientX;\n      } else {\n        this.shiftX = left - e.clientX;\n      }\n\n      this.dragging = thumbElement;\n      this.element.classList.add('range-slider_dragging');\n      document.addEventListener('pointermove', this.pointerMove);\n      document.addEventListener('pointerup', this.clickUp);\n    });\n\n    _defineProperty(this, \"pointerMove\", e => {\n      e.preventDefault();\n      const {\n        left: innerLeft,\n        right: innerRight,\n        width\n      } = this.subElements.inner.getBoundingClientRect();\n\n      if (this.dragging === this.subElements.thumbLeft) {\n        let newLeft = (e.clientX - innerLeft + this.shiftX) / width;\n\n        if (newLeft < 0) {\n          newLeft = 0;\n        }\n\n        newLeft *= 100;\n        let right = parseFloat(this.subElements.thumbRight.style.right);\n\n        if (newLeft + right > 100) {\n          newLeft = 100 - right;\n        }\n\n        this.dragging.style.left = this.subElements.progress.style.left = newLeft + '%';\n        this.subElements.from.innerHTML = this.formatValue(this.getValue().from);\n      }\n\n      if (this.dragging === this.subElements.thumbRight) {\n        let newRight = (innerRight - e.clientX - this.shiftX) / width;\n\n        if (newRight < 0) {\n          newRight = 0;\n        }\n\n        newRight *= 100;\n        let left = parseFloat(this.subElements.thumbLeft.style.left);\n\n        if (left + newRight > 100) {\n          newRight = 100 - left;\n        }\n\n        this.dragging.style.right = this.subElements.progress.style.right = newRight + '%';\n        this.subElements.to.innerHTML = this.formatValue(this.getValue().to);\n      }\n    });\n\n    _defineProperty(this, \"clickUp\", e => {\n      this.element.classList.remove('range-slider_dragging');\n      document.removeEventListener('pointermove', this.pointerMove);\n      document.removeEventListener('pointerup', this.clickUp);\n      this.element.dispatchEvent(new CustomEvent('range-select', {\n        detail: this.getValue(),\n        bubbles: true\n      }));\n    });\n\n    this.min = min;\n    this.max = max;\n    this.formatValue = formatValue;\n    this.selected = selected;\n    this.render();\n  }\n\n  get markup() {\n    const {\n      from,\n      to\n    } = this.selected;\n    return \"\\n          <div class=\\\"range-slider\\\">\\n              <span data-element=\\\"from\\\">\".concat(this.formatValue(from), \"</span>\\n              <div data-element=\\\"inner\\\" class=\\\"range-slider__inner\\\">\\n                  <span data-element=\\\"progress\\\" class=\\\"range-slider__progress\\\"></span>\\n                  <span data-element=\\\"thumbLeft\\\" class=\\\"range-slider__thumb-left\\\"></span>\\n                  <span data-element=\\\"thumbRight\\\" class=\\\"range-slider__thumb-right\\\"></span>\\n              </div>\\n              <span data-element=\\\"to\\\">\").concat(this.formatValue(to), \"</span>\\n          </div>\");\n  }\n\n  render() {\n    const element = document.createElement('div');\n    element.innerHTML = this.markup;\n    this.element = element.firstElementChild;\n    this.subElements = this.getSubElements(this.element);\n    this.initEventListeners();\n    this.update();\n  }\n\n  getSubElements(element) {\n    const allElements = element.querySelectorAll('[data-element]');\n    return [...allElements].reduce((acc, nextValue) => {\n      acc[nextValue.dataset.element] = nextValue;\n      return acc;\n    }, {});\n  }\n\n  initEventListeners() {\n    const {\n      thumbLeft,\n      thumbRight\n    } = this.subElements;\n    thumbLeft.addEventListener('pointerdown', this.clickDown);\n    thumbRight.addEventListener('pointerdown', this.clickDown);\n  }\n\n  getValue() {\n    const rangeTotal = this.max - this.min;\n    const {\n      left\n    } = this.subElements.thumbLeft.style;\n    const {\n      right\n    } = this.subElements.thumbRight.style;\n    const from = Math.round(this.min + parseFloat(left) * 0.01 * rangeTotal);\n    const to = Math.round(this.max - parseFloat(right) * 0.01 * rangeTotal);\n    return {\n      from,\n      to\n    };\n  }\n\n  remove() {\n    this.element.remove();\n  }\n\n  destroy() {\n    this.remove();\n    document.removeEventListener('pointermove', this.onThumbPointerMove);\n    document.removeEventListener('pointerup', this.onThumbPointerUp);\n  }\n\n  update() {\n    const rangeTotal = this.max - this.min;\n    const left = Math.floor((this.selected.from - this.min) / rangeTotal * 100) + '%';\n    const right = Math.floor((this.max - this.selected.to) / rangeTotal * 100) + '%';\n    this.subElements.progress.style.left = left;\n    this.subElements.progress.style.right = right;\n    this.subElements.thumbLeft.style.left = left;\n    this.subElements.thumbRight.style.right = right;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/double-slider/index.js\n");

/***/ })

})