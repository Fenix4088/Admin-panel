webpackHotUpdate("products-list-index-js",{

/***/ "./src/components/sortable-list/index.js":
/*!***********************************************!*\
  !*** ./src/components/sortable-list/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return SortableList; });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass SortableList {\n  constructor({\n    items = []\n  } = {}) {\n    _defineProperty(this, \"element\", void 0);\n\n    _defineProperty(this, \"elementInitialIndex\", void 0);\n\n    _defineProperty(this, \"pointerInitialShift\", {});\n\n    _defineProperty(this, \"draggingElem\", void 0);\n\n    _defineProperty(this, \"placeholderElem\", void 0);\n\n    _defineProperty(this, \"onPointerDown\", event => {\n      if (event.which !== 1) {\n        // must be left-button\n        return false;\n      }\n\n      const itemElem = event.target.closest(\".sortable-list__item\");\n\n      if (itemElem) {\n        event.preventDefault();\n\n        if (event.target.closest(\"[data-grab-handle]\")) {\n          this.dragStart(itemElem, event);\n        }\n\n        if (event.target.closest(\"[data-delete-handle]\")) {\n          itemElem.remove();\n        }\n      }\n    });\n\n    _defineProperty(this, \"onDocumentPointerMove\", event => {\n      const {\n        clientX,\n        clientY\n      } = event;\n      this.moveDraggingAt(clientX, clientY);\n      const {\n        firstElementChild,\n        children\n      } = this.element;\n      const {\n        top: firstElementTop\n      } = firstElementChild.getBoundingClientRect();\n      const {\n        bottom\n      } = this.element.getBoundingClientRect();\n\n      if (clientY < firstElementTop) {\n        this.movePlaceholderAt(0);\n      } else if (clientY > bottom) {\n        this.movePlaceholderAt(children.length);\n      } else {\n        for (let i = 0; i < children.length; i++) {\n          const li = children[i]; // ignore to prevent bugs when dragging between elements\n\n          if (li !== this.draggingElem) {\n            const {\n              top,\n              bottom\n            } = li.getBoundingClientRect();\n            const {\n              offsetHeight: height\n            } = li;\n\n            if (clientY > top && clientY < bottom) {\n              // inside the element (y-axis)\n              if (clientY < top + height / 2) {\n                // upper half of the element\n                this.movePlaceholderAt(i);\n                break;\n              } else {\n                // lower half of the element\n                this.movePlaceholderAt(i + 1);\n                break;\n              }\n            }\n          }\n        }\n      }\n\n      this.scrollIfCloseToWindowEdge(clientY);\n    });\n\n    _defineProperty(this, \"onDocumentPointerUp\", event => {\n      this.dragStop();\n    });\n\n    this.items = items;\n    this.render();\n  }\n\n  render() {\n    this.element = document.createElement(\"ul\");\n    this.element.className = \"sortable-list\";\n    this.addItems();\n    this.initEventListeners();\n  }\n\n  initEventListeners() {\n    this.element.addEventListener(\"pointerdown\", this.onPointerDown);\n  }\n\n  addItems() {\n    for (let item of this.items) {\n      item.classList.add(\"sortable-list__item\");\n    }\n\n    this.element.append(...this.items);\n  }\n\n  dragStart(itemElem, event) {\n    const {\n      clientX,\n      clientY\n    } = event;\n    this.elementInitialIndex = [...this.element.children].indexOf(itemElem);\n    this.pointerInitialShift = {\n      x: clientX - itemElem.getBoundingClientRect().x,\n      y: clientY - itemElem.getBoundingClientRect().y\n    };\n    this.draggingElem = itemElem; // Create a placeholder\n\n    this.placeholderElem = document.createElement(\"li\");\n    this.placeholderElem.className = \"sortable-list__placeholder\"; // itemElem will get position:fixed\n    // so its width will be auto-set to fit the parent container\n\n    itemElem.style.width = \"\".concat(itemElem.offsetWidth, \"px\");\n    itemElem.style.height = \"\".concat(itemElem.offsetHeight, \"px\");\n    this.placeholderElem.style.width = itemElem.style.width;\n    this.placeholderElem.style.height = itemElem.style.height;\n    itemElem.classList.add(\"sortable-list__item_dragging\");\n    itemElem.after(this.placeholderElem); // move to the end, to be over other list elements\n\n    this.element.append(itemElem);\n    this.moveDraggingAt(clientX, clientY);\n    document.addEventListener(\"pointermove\", this.onDocumentPointerMove);\n    document.addEventListener(\"pointerup\", this.onDocumentPointerUp);\n  }\n\n  moveDraggingAt(clientX, clientY) {\n    this.draggingElem.style.left = clientX - this.pointerInitialShift.x + \"px\";\n    this.draggingElem.style.top = clientY - this.pointerInitialShift.y + \"px\";\n  }\n\n  movePlaceholderAt(index) {\n    const currentElement = this.element.children[index];\n\n    if (currentElement !== this.placeholderElem) {\n      this.element.insertBefore(this.placeholderElem, currentElement);\n    }\n  }\n\n  dragStop() {\n    const placeholderIndex = [...this.element.children].indexOf(this.placeholderElem); // drop element back\n\n    this.placeholderElem.replaceWith(this.draggingElem);\n    this.draggingElem.classList.remove(\"sortable-list__item_dragging\");\n    this.draggingElem.style.left = \"\";\n    this.draggingElem.style.top = \"\";\n    this.draggingElem.style.width = \"\";\n    this.draggingElem.style.height = \"\";\n    document.removeEventListener(\"pointermove\", this.onDocumentPointerMove);\n    document.removeEventListener(\"pointerup\", this.onDocumentPointerUp);\n    this.draggingElem = null;\n\n    if (placeholderIndex !== this.elementInitialIndex) {\n      this.element.dispatchEvent(new CustomEvent(\"sortable-list-reorder\", {\n        bubbles: true,\n        details: {\n          from: this.elementInitialIndex,\n          to: placeholderIndex\n        }\n      }));\n    }\n  }\n\n  scrollIfCloseToWindowEdge(clientY) {\n    const scrollingValue = 10;\n    const threshold = 20;\n\n    if (clientY < threshold) {\n      window.scrollBy(0, -scrollingValue);\n    } else if (clientY > document.documentElement.clientHeight - threshold) {\n      window.scrollBy(0, scrollingValue);\n    }\n  }\n\n  remove() {\n    this.element.remove();\n    document.removeEventListener(\"pointermove\", this.onDocumentPointerMove);\n    document.removeEventListener(\"pointerup\", this.onDocumentPointerUp);\n  }\n\n  destroy() {\n    this.remove();\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9zb3J0YWJsZS1saXN0L2luZGV4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvc29ydGFibGUtbGlzdC9pbmRleC5qcz8wNWQxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvcnRhYmxlTGlzdCB7XHJcbiAgZWxlbWVudDtcclxuICBlbGVtZW50SW5pdGlhbEluZGV4O1xyXG4gIHBvaW50ZXJJbml0aWFsU2hpZnQgPSB7fTtcclxuICBkcmFnZ2luZ0VsZW07XHJcbiAgcGxhY2Vob2xkZXJFbGVtO1xyXG5cclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zID0gW10gfSA9IHt9KSB7XHJcbiAgICB0aGlzLml0ZW1zID0gaXRlbXM7XHJcblxyXG4gICAgdGhpcy5yZW5kZXIoKTtcclxuICB9XHJcblxyXG4gIHJlbmRlcigpIHtcclxuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcclxuICAgIHRoaXMuZWxlbWVudC5jbGFzc05hbWUgPSBcInNvcnRhYmxlLWxpc3RcIjtcclxuXHJcbiAgICB0aGlzLmFkZEl0ZW1zKCk7XHJcbiAgICB0aGlzLmluaXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxuXHJcbiAgaW5pdEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVyZG93blwiLCB0aGlzLm9uUG9pbnRlckRvd24pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbXMoKSB7XHJcbiAgICBmb3IgKGxldCBpdGVtIG9mIHRoaXMuaXRlbXMpIHtcclxuICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKFwic29ydGFibGUtbGlzdF9faXRlbVwiKTtcclxuICAgIH1cclxuICAgIHRoaXMuZWxlbWVudC5hcHBlbmQoLi4udGhpcy5pdGVtcyk7XHJcbiAgfVxyXG5cclxuICBvblBvaW50ZXJEb3duID0gKGV2ZW50KSA9PiB7XHJcbiAgICBpZiAoZXZlbnQud2hpY2ggIT09IDEpIHtcclxuICAgICAgLy8gbXVzdCBiZSBsZWZ0LWJ1dHRvblxyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgaXRlbUVsZW0gPSBldmVudC50YXJnZXQuY2xvc2VzdChcIi5zb3J0YWJsZS1saXN0X19pdGVtXCIpO1xyXG5cclxuICAgIGlmIChpdGVtRWxlbSkge1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBpZiAoZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCJbZGF0YS1ncmFiLWhhbmRsZV1cIikpIHtcclxuICAgICAgICB0aGlzLmRyYWdTdGFydChpdGVtRWxlbSwgZXZlbnQpO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoZXZlbnQudGFyZ2V0LmNsb3Nlc3QoXCJbZGF0YS1kZWxldGUtaGFuZGxlXVwiKSkge1xyXG4gICAgICAgIGl0ZW1FbGVtLnJlbW92ZSgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgZHJhZ1N0YXJ0KGl0ZW1FbGVtLCBldmVudCkge1xyXG4gICAgY29uc3QgeyBjbGllbnRYLCBjbGllbnRZIH0gPSBldmVudDtcclxuXHJcbiAgICB0aGlzLmVsZW1lbnRJbml0aWFsSW5kZXggPSBbLi4udGhpcy5lbGVtZW50LmNoaWxkcmVuXS5pbmRleE9mKGl0ZW1FbGVtKTtcclxuXHJcbiAgICB0aGlzLnBvaW50ZXJJbml0aWFsU2hpZnQgPSB7XHJcbiAgICAgIHg6IGNsaWVudFggLSBpdGVtRWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS54LFxyXG4gICAgICB5OiBjbGllbnRZIC0gaXRlbUVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkueSxcclxuICAgIH07XHJcblxyXG4gICAgdGhpcy5kcmFnZ2luZ0VsZW0gPSBpdGVtRWxlbTtcclxuXHJcbiAgICAvLyBDcmVhdGUgYSBwbGFjZWhvbGRlclxyXG4gICAgdGhpcy5wbGFjZWhvbGRlckVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XHJcbiAgICB0aGlzLnBsYWNlaG9sZGVyRWxlbS5jbGFzc05hbWUgPSBcInNvcnRhYmxlLWxpc3RfX3BsYWNlaG9sZGVyXCI7XHJcblxyXG4gICAgLy8gaXRlbUVsZW0gd2lsbCBnZXQgcG9zaXRpb246Zml4ZWRcclxuICAgIC8vIHNvIGl0cyB3aWR0aCB3aWxsIGJlIGF1dG8tc2V0IHRvIGZpdCB0aGUgcGFyZW50IGNvbnRhaW5lclxyXG4gICAgaXRlbUVsZW0uc3R5bGUud2lkdGggPSBgJHtpdGVtRWxlbS5vZmZzZXRXaWR0aH1weGA7XHJcbiAgICBpdGVtRWxlbS5zdHlsZS5oZWlnaHQgPSBgJHtpdGVtRWxlbS5vZmZzZXRIZWlnaHR9cHhgO1xyXG5cclxuICAgIHRoaXMucGxhY2Vob2xkZXJFbGVtLnN0eWxlLndpZHRoID0gaXRlbUVsZW0uc3R5bGUud2lkdGg7XHJcbiAgICB0aGlzLnBsYWNlaG9sZGVyRWxlbS5zdHlsZS5oZWlnaHQgPSBpdGVtRWxlbS5zdHlsZS5oZWlnaHQ7XHJcblxyXG4gICAgaXRlbUVsZW0uY2xhc3NMaXN0LmFkZChcInNvcnRhYmxlLWxpc3RfX2l0ZW1fZHJhZ2dpbmdcIik7XHJcblxyXG4gICAgaXRlbUVsZW0uYWZ0ZXIodGhpcy5wbGFjZWhvbGRlckVsZW0pO1xyXG5cclxuICAgIC8vIG1vdmUgdG8gdGhlIGVuZCwgdG8gYmUgb3ZlciBvdGhlciBsaXN0IGVsZW1lbnRzXHJcbiAgICB0aGlzLmVsZW1lbnQuYXBwZW5kKGl0ZW1FbGVtKTtcclxuXHJcbiAgICB0aGlzLm1vdmVEcmFnZ2luZ0F0KGNsaWVudFgsIGNsaWVudFkpO1xyXG5cclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJwb2ludGVybW92ZVwiLCB0aGlzLm9uRG9jdW1lbnRQb2ludGVyTW92ZSk7XHJcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwicG9pbnRlcnVwXCIsIHRoaXMub25Eb2N1bWVudFBvaW50ZXJVcCk7XHJcbiAgfVxyXG5cclxuICBvbkRvY3VtZW50UG9pbnRlck1vdmUgPSAoZXZlbnQpID0+IHtcclxuICAgIGNvbnN0IHsgY2xpZW50WCwgY2xpZW50WSB9ID0gZXZlbnQ7XHJcblxyXG4gICAgdGhpcy5tb3ZlRHJhZ2dpbmdBdChjbGllbnRYLCBjbGllbnRZKTtcclxuXHJcbiAgICBjb25zdCB7IGZpcnN0RWxlbWVudENoaWxkLCBjaGlsZHJlbiB9ID0gdGhpcy5lbGVtZW50O1xyXG4gICAgY29uc3QgeyB0b3A6IGZpcnN0RWxlbWVudFRvcCB9ID0gZmlyc3RFbGVtZW50Q2hpbGQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICBjb25zdCB7IGJvdHRvbSB9ID0gdGhpcy5lbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgIGlmIChjbGllbnRZIDwgZmlyc3RFbGVtZW50VG9wKSB7XHJcbiAgICAgIHRoaXMubW92ZVBsYWNlaG9sZGVyQXQoMCk7XHJcbiAgICB9IGVsc2UgaWYgKGNsaWVudFkgPiBib3R0b20pIHtcclxuICAgICAgdGhpcy5tb3ZlUGxhY2Vob2xkZXJBdChjaGlsZHJlbi5sZW5ndGgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZHJlbi5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGNvbnN0IGxpID0gY2hpbGRyZW5baV07XHJcbiAgICAgICAgLy8gaWdub3JlIHRvIHByZXZlbnQgYnVncyB3aGVuIGRyYWdnaW5nIGJldHdlZW4gZWxlbWVudHNcclxuICAgICAgICBpZiAobGkgIT09IHRoaXMuZHJhZ2dpbmdFbGVtKSB7XHJcbiAgICAgICAgICBjb25zdCB7IHRvcCwgYm90dG9tIH0gPSBsaS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICAgIGNvbnN0IHsgb2Zmc2V0SGVpZ2h0OiBoZWlnaHQgfSA9IGxpO1xyXG5cclxuICAgICAgICAgIGlmIChjbGllbnRZID4gdG9wICYmIGNsaWVudFkgPCBib3R0b20pIHtcclxuICAgICAgICAgICAgLy8gaW5zaWRlIHRoZSBlbGVtZW50ICh5LWF4aXMpXHJcbiAgICAgICAgICAgIGlmIChjbGllbnRZIDwgdG9wICsgaGVpZ2h0IC8gMikge1xyXG4gICAgICAgICAgICAgIC8vIHVwcGVyIGhhbGYgb2YgdGhlIGVsZW1lbnRcclxuICAgICAgICAgICAgICB0aGlzLm1vdmVQbGFjZWhvbGRlckF0KGkpO1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIC8vIGxvd2VyIGhhbGYgb2YgdGhlIGVsZW1lbnRcclxuICAgICAgICAgICAgICB0aGlzLm1vdmVQbGFjZWhvbGRlckF0KGkgKyAxKTtcclxuICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuc2Nyb2xsSWZDbG9zZVRvV2luZG93RWRnZShjbGllbnRZKTtcclxuICB9O1xyXG5cclxuICBtb3ZlRHJhZ2dpbmdBdChjbGllbnRYLCBjbGllbnRZKSB7XHJcbiAgICB0aGlzLmRyYWdnaW5nRWxlbS5zdHlsZS5sZWZ0ID0gY2xpZW50WCAtIHRoaXMucG9pbnRlckluaXRpYWxTaGlmdC54ICsgXCJweFwiO1xyXG4gICAgdGhpcy5kcmFnZ2luZ0VsZW0uc3R5bGUudG9wID0gY2xpZW50WSAtIHRoaXMucG9pbnRlckluaXRpYWxTaGlmdC55ICsgXCJweFwiO1xyXG4gIH1cclxuXHJcbiAgbW92ZVBsYWNlaG9sZGVyQXQoaW5kZXgpIHtcclxuICAgIGNvbnN0IGN1cnJlbnRFbGVtZW50ID0gdGhpcy5lbGVtZW50LmNoaWxkcmVuW2luZGV4XTtcclxuXHJcbiAgICBpZiAoY3VycmVudEVsZW1lbnQgIT09IHRoaXMucGxhY2Vob2xkZXJFbGVtKSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudC5pbnNlcnRCZWZvcmUodGhpcy5wbGFjZWhvbGRlckVsZW0sIGN1cnJlbnRFbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG9uRG9jdW1lbnRQb2ludGVyVXAgPSAoZXZlbnQpID0+IHtcclxuICAgIHRoaXMuZHJhZ1N0b3AoKTtcclxuICB9O1xyXG5cclxuICBkcmFnU3RvcCgpIHtcclxuICAgIGNvbnN0IHBsYWNlaG9sZGVySW5kZXggPSBbLi4udGhpcy5lbGVtZW50LmNoaWxkcmVuXS5pbmRleE9mKFxyXG4gICAgICB0aGlzLnBsYWNlaG9sZGVyRWxlbVxyXG4gICAgKTtcclxuXHJcbiAgICAvLyBkcm9wIGVsZW1lbnQgYmFja1xyXG4gICAgdGhpcy5wbGFjZWhvbGRlckVsZW0ucmVwbGFjZVdpdGgodGhpcy5kcmFnZ2luZ0VsZW0pO1xyXG4gICAgdGhpcy5kcmFnZ2luZ0VsZW0uY2xhc3NMaXN0LnJlbW92ZShcInNvcnRhYmxlLWxpc3RfX2l0ZW1fZHJhZ2dpbmdcIik7XHJcblxyXG4gICAgdGhpcy5kcmFnZ2luZ0VsZW0uc3R5bGUubGVmdCA9IFwiXCI7XHJcbiAgICB0aGlzLmRyYWdnaW5nRWxlbS5zdHlsZS50b3AgPSBcIlwiO1xyXG4gICAgdGhpcy5kcmFnZ2luZ0VsZW0uc3R5bGUud2lkdGggPSBcIlwiO1xyXG4gICAgdGhpcy5kcmFnZ2luZ0VsZW0uc3R5bGUuaGVpZ2h0ID0gXCJcIjtcclxuXHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcm1vdmVcIiwgdGhpcy5vbkRvY3VtZW50UG9pbnRlck1vdmUpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCB0aGlzLm9uRG9jdW1lbnRQb2ludGVyVXApO1xyXG5cclxuICAgIHRoaXMuZHJhZ2dpbmdFbGVtID0gbnVsbDtcclxuXHJcbiAgICBpZiAocGxhY2Vob2xkZXJJbmRleCAhPT0gdGhpcy5lbGVtZW50SW5pdGlhbEluZGV4KSB7XHJcbiAgICAgIHRoaXMuZWxlbWVudC5kaXNwYXRjaEV2ZW50KFxyXG4gICAgICAgIG5ldyBDdXN0b21FdmVudChcInNvcnRhYmxlLWxpc3QtcmVvcmRlclwiLCB7XHJcbiAgICAgICAgICBidWJibGVzOiB0cnVlLFxyXG4gICAgICAgICAgZGV0YWlsczoge1xyXG4gICAgICAgICAgICBmcm9tOiB0aGlzLmVsZW1lbnRJbml0aWFsSW5kZXgsXHJcbiAgICAgICAgICAgIHRvOiBwbGFjZWhvbGRlckluZGV4LFxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9KVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc2Nyb2xsSWZDbG9zZVRvV2luZG93RWRnZShjbGllbnRZKSB7XHJcbiAgICBjb25zdCBzY3JvbGxpbmdWYWx1ZSA9IDEwO1xyXG4gICAgY29uc3QgdGhyZXNob2xkID0gMjA7XHJcblxyXG4gICAgaWYgKGNsaWVudFkgPCB0aHJlc2hvbGQpIHtcclxuICAgICAgd2luZG93LnNjcm9sbEJ5KDAsIC1zY3JvbGxpbmdWYWx1ZSk7XHJcbiAgICB9IGVsc2UgaWYgKGNsaWVudFkgPiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0IC0gdGhyZXNob2xkKSB7XHJcbiAgICAgIHdpbmRvdy5zY3JvbGxCeSgwLCBzY3JvbGxpbmdWYWx1ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICByZW1vdmUoKSB7XHJcbiAgICB0aGlzLmVsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwicG9pbnRlcm1vdmVcIiwgdGhpcy5vbkRvY3VtZW50UG9pbnRlck1vdmUpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInBvaW50ZXJ1cFwiLCB0aGlzLm9uRG9jdW1lbnRQb2ludGVyVXApO1xyXG4gIH1cclxuXHJcbiAgZGVzdHJveSgpIHtcclxuICAgIHRoaXMucmVtb3ZlKCk7XHJcbiAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBT0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQUNBO0FBREE7QUFDQTtBQURBO0FBQ0E7QUFEQTtBQTBCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBNUNBO0FBbUZBO0FBQUE7QUFBQTtBQUFBO0FBRUE7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBekhBO0FBd0lBO0FBQ0E7QUFDQTtBQXpJQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBcUJBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUZBO0FBS0E7QUFDQTtBQUVBO0FBQ0E7QUFHQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUF5Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBRkE7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF0TUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/sortable-list/index.js\n");

/***/ })

})